#pragma version 9

// This TEAL was generated by TEALScript v0.63.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// txnTypes(pay,keyreg,axfer,afrz,acfg,appl,txn)void
abi_route_txnTypes:
	// p: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// kr: keyreg
	txn GroupIndex
	int 2
	-
	dup
	gtxns TypeEnum
	int keyreg
	==
	assert

	// at: axfer
	txn GroupIndex
	int 3
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// af: afrz
	txn GroupIndex
	int 4
	-
	dup
	gtxns TypeEnum
	int afrz
	==
	assert

	// ac: acfg
	txn GroupIndex
	int 5
	-
	dup
	gtxns TypeEnum
	int acfg
	==
	assert

	// a: appl
	txn GroupIndex
	int 6
	-
	dup
	gtxns TypeEnum
	int appl
	==
	assert

	// t: txn
	txn GroupIndex
	int 7
	-

	// execute txnTypes(pay,keyreg,axfer,afrz,acfg,appl,txn)void
	callsub txnTypes
	int 1
	return

txnTypes:
	proto 7 0

	// tests/contracts/abi.algo.ts:726
	// assert(t.sender === a.sender)
	frame_dig -1 // t: txn
	gtxns Sender
	frame_dig -2 // a: appl
	gtxns Sender
	==
	assert

	// tests/contracts/abi.algo.ts:727
	// assert(ac.sender === af.sender)
	frame_dig -3 // ac: acfg
	gtxns Sender
	frame_dig -4 // af: afrz
	gtxns Sender
	==
	assert

	// tests/contracts/abi.algo.ts:728
	// assert(at.sender === kr.sender)
	frame_dig -5 // at: axfer
	gtxns Sender
	frame_dig -6 // kr: keyreg
	gtxns Sender
	==
	assert

	// tests/contracts/abi.algo.ts:729
	// assert(p.sender === t.sender)
	frame_dig -7 // p: pay
	gtxns Sender
	frame_dig -1 // t: txn
	gtxns Sender
	==
	assert
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "txnTypes(txn,appl,acfg,afrz,axfer,keyreg,pay)void"
	txna ApplicationArgs 0
	match abi_route_txnTypes
	err