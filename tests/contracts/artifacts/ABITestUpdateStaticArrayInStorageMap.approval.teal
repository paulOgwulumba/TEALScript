#pragma version 9

// This TEAL was generated by TEALScript v0.63.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_OptIn

NOT_IMPLEMENTED:
	err

// updateStaticArrayInStorageMap()uint64[3]
abi_route_updateStaticArrayInStorageMap:
	byte 0x; dup // push empty bytes to fill the stack frame for this subroutine's local variables

	// execute updateStaticArrayInStorageMap()uint64[3]
	callsub updateStaticArrayInStorageMap
	int 1
	return

updateStaticArrayInStorageMap:
	proto 2 0

	// tests/contracts/abi.algo.ts:176
	// a: StaticArray<uint64, 3> = [11, 22, 33]
	byte 0x000000000000000b00000000000000160000000000000021
	frame_bury -1 // a: uint64[3]

	// tests/contracts/abi.algo.ts:178
	// this.gMap('gMap').value = a
	byte 0x674d6170 // "gMap"
	byte 0x000000000000000b00000000000000160000000000000021 // a: uint64[3]
	app_global_put

	// tests/contracts/abi.algo.ts:179
	// this.lMap(this.txn.sender, 'lMap').value = a
	txn Sender
	byte 0x6c4d6170 // "lMap"
	byte 0x000000000000000b00000000000000160000000000000021 // a: uint64[3]
	app_local_put

	// tests/contracts/abi.algo.ts:180
	// this.bMap('bMap').value = a
	byte 0x624d6170 // "bMap"
	byte 0x000000000000000b00000000000000160000000000000021 // a: uint64[3]
	box_put

	// tests/contracts/abi.algo.ts:182
	// this.gMap('gMap').value[1] = 1111
	byte 0x674d6170 // "gMap"
	app_global_get
	byte 0x0000000000000457
	replace2 8
	byte 0x674d6170 // "gMap"
	swap
	app_global_put

	// tests/contracts/abi.algo.ts:183
	// this.lMap(this.txn.sender, 'lMap').value[1] = 2222
	txn Sender
	byte 0x6c4d6170 // "lMap"
	app_local_get
	byte 0x00000000000008ae
	replace2 8
	txn Sender
	byte 0x6c4d6170 // "lMap"
	uncover 2
	app_local_put

	// tests/contracts/abi.algo.ts:184
	// this.bMap('bMap').value[1] = 3333
	byte 0x624d6170 // "bMap"
	int 8
	byte 0x0000000000000d05
	box_replace

	// tests/contracts/abi.algo.ts:186
	// ret: StaticArray<uint64, 3> = [
	//       this.gMap('gMap').value[1],
	//       this.lMap(this.txn.sender, 'lMap').value[1],
	//       this.bMap('bMap').value[1],
	//     ]
	byte 0x674d6170 // "gMap"
	app_global_get
	extract 8 8
	btoi
	itob
	txn Sender
	byte 0x6c4d6170 // "lMap"
	app_local_get
	extract 8 8
	btoi
	itob
	concat
	byte 0x624d6170 // "bMap"
	box_get
	assert
	extract 8 8
	btoi
	itob
	concat
	frame_bury -2 // ret: uint64[3]

	// tests/contracts/abi.algo.ts:192
	// return ret;
	byte 0x151f7c75
	frame_dig -2 // ret: uint64[3]
	concat
	log
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_OptIn:
	method "updateStaticArrayInStorageMap()uint64[3]"
	txna ApplicationArgs 0
	match abi_route_updateStaticArrayInStorageMap
	err