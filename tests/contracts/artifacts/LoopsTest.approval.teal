#pragma version 9

// This TEAL was generated by TEALScript v0.63.0
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its repsective branch will be "NOT_IMPLMENTED" which just contains "err"
txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

// whileLoop()uint64
abi_route_whileLoop:
	byte 0x // push empty bytes to fill the stack frame for this subroutine's local variables

	// execute whileLoop()uint64
	callsub whileLoop
	int 1
	return

whileLoop:
	proto 1 0

	// tests/contracts/loops.algo.ts:6
	// i = 0
	int 0
	frame_bury -1 // i: uint64

while_0:
	frame_dig -1 // i: uint64
	int 10
	<
	bz while_0_end

	// tests/contracts/loops.algo.ts:9
	// i = i + 1
	frame_dig -1 // i: uint64
	int 1
	+
	frame_bury -1 // i: uint64
	b while_0

while_0_end:
	// tests/contracts/loops.algo.ts:12
	// return i;
	frame_dig -1 // i: uint64
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

// forLoop()uint64
abi_route_forLoop:
	byte 0x; dup // push empty bytes to fill the stack frame for this subroutine's local variables

	// execute forLoop()uint64
	callsub forLoop
	int 1
	return

forLoop:
	proto 2 0

	// tests/contracts/loops.algo.ts:16
	// i = 0
	int 0
	frame_bury -1 // i: uint64

	// tests/contracts/loops.algo.ts:18
	// j = 0
	int 0
	frame_bury -2 // j: uint64

for_0:
	frame_dig -2 // j: uint64
	int 10
	<
	bz for_0_end

	// tests/contracts/loops.algo.ts:19
	// i = i + 1
	frame_dig -1 // i: uint64
	int 1
	+
	frame_bury -1 // i: uint64

	// tests/contracts/loops.algo.ts:18
	// j = j + 1
	frame_dig -2 // j: uint64
	int 1
	+
	frame_bury -2 // j: uint64
	b for_0

for_0_end:
	// tests/contracts/loops.algo.ts:22
	// return i;
	frame_dig -1 // i: uint64
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "whileLoop()uint64"
	method "forLoop()uint64"
	txna ApplicationArgs 0
	match abi_route_whileLoop abi_route_forLoop
	err